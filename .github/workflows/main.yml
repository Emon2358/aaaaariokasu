name: Decompile PmmaSoftware.exe using Ghidra (x86 Native)

on:
  workflow_dispatch:

jobs:
  decompile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download PmmaSoftware.exe
        run: |
          curl -L -o PmmaSoftware.exe https://github.com/Emon2358/aaaaariokasu/releases/download/aaaaropkasui/PmmaSoftware.exe
          file PmmaSoftware.exe

      - name: Download Ghidra 11.4.2
        run: |
          GHIDRA_ZIP="ghidra_11.4.2_PUBLIC_20250826.zip"
          GHIDRA_URL="https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_11.4.2_build/${GHIDRA_ZIP}"
          curl -L -o "$GHIDRA_ZIP" "$GHIDRA_URL"
          unzip -q "$GHIDRA_ZIP"
          GHIDRA_DIR=$(ls -d ghidra_* | head -n1)
          echo "Ghidra directory: $GHIDRA_DIR"

      - name: Decompile with Ghidra (x86)
        run: |
          GHIDRA_DIR=$(ls -d ghidra_* | head -n1)
          GHIDRA_HEADLESS="$GHIDRA_DIR/support/analyzeHeadless"
          mkdir -p recovered/ghidra_out

          # プロジェクトを作成して x86 ネイティブとして解析
          PROJECT_NAME="ghidra_project_temp"
          mkdir -p "$PROJECT_NAME"
          
          "$GHIDRA_HEADLESS" "$PROJECT_NAME" \
            -import PmmaSoftware.exe \
            -processor x86:LE:32:default \
            -scriptPath ghidra_scripts \
            -postScript export_all_decompiled.py \
            -deleteProject

      - name: Commit recovered decompiled code
        run: |
          set -euo pipefail
          BRANCH="recovered-source-$(date +%Y%m%d%H%M%S)"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -B "$BRANCH"
          if [ -d recovered/ghidra_out ] && [ -n "$(ls -A recovered/ghidra_out 2>/dev/null || true)" ]; then
            git add -A recovered/ghidra_out
            git commit -m "Recovered native decompiled output (Ghidra x86) from PmmaSoftware.exe"
            git push -u origin "$BRANCH"
          else
            echo "No recovered files to commit; skipping."

